    - name: create a virtualenv (python3) for the build
      command: /usr/local/bin/virtualenv3 -p {{ python_interpreter|default('python3.6') }} {{ base_dir }}/builds/{{current_build_value}}
      when: python_interpreter is defined and python_interpreter == "python3.6"

    - name: Create a virtualenv (python2.7) for the build
      command: /usr/local/bin/virtualenv-2.7 -p {{ python_interpreter|default('python2.6') }} {{ base_dir }}/builds/{{current_build_value}}
      when: (centos7 is undefined or not centos7) and not (python_interpreter == "python3.6")

    - name: Create a virtualenv for the build
      command: /usr/bin/virtualenv {{ base_dir }}/builds/{{current_build_value}}
      when: (centos7 is defined and centos7) and not (python_interpreter == "python3.6")

    - name: Copy over requirements for the project level
      copy: src="{{ files_dir }}/project_requirements.txt" dest="{{ base_dir }}/project_requirements.txt" group="{{ file_group }}" mode="0664"

    - name: Upgrades pip and setuptools
      shell: source {{ base_dir }}/builds/{{current_build_value}}/bin/activate && pip install --upgrade pip && pip install --upgrade setuptools

    - name: Install pip-accel
      pip: virtualenv="{{ base_dir }}/builds/{{current_build_value}}" name=pip-accel

    - name: Install the PermissionsLogging module - needed to make sure our logs are group-writable
      shell: source {{ base_dir }}/builds/{{current_build_value}}/bin/activate && PIP_ACCEL_CACHE={{ pip_accel_cache_dir }} pip-accel install -r {{ base_dir }}/project_requirements.txt -i {{ pypi_mirror | default("https://pypi.org/simple/") }}

    - name: Perform upgrades with pip.  May (but should not) take a while
      shell: source {{ base_dir }}/builds/{{current_build_value}}/bin/activate && PIP_ACCEL_CACHE={{ pip_accel_cache_dir }} pip-accel install -r {{ base_dir }}//builds/{{current_build_value}}/{{ item }} -U -i {{ pypi_mirror | default("https://pypi.org/simple/") }}
      with_items: "{{ pip_upgrades_files }}"
      when: pip_upgrades_files is defined

    - name: Install requirements with pip.  May (probably will) take a while
      shell: cd {{ base_dir }}/builds/{{current_build_value}} && source ./bin/activate && PIP_ACCEL_CACHE={{ pip_accel_cache_dir }} pip-accel install -r {{ item }} -i {{ pypi_mirror | default("https://pypi.org/simple/") }}
      with_items: "{{ pip_requirements_files }}"
      environment:
          PATH: "{{ path }}"

    - name: Create project directory
      file: group="{{ file_group }}" mode="2775" state="directory" path="{{ base_dir }}/builds/{{current_build_value}}/project"

    - name: Create the project settings file
      template: src="templates/project_settings.py" dest="{{ base_dir }}/builds/{{current_build_value}}/project/settings.py" group="{{ file_group }}" mode="664"

    - name: Create the project urls file
      template: src="templates/project_urls.py" dest="{{ base_dir }}/builds/{{current_build_value}}/project/urls.py" group="{{ file_group }}" mode="644"

    - name: Create the __init__ file
      file: state="touch" path="{{ base_dir }}/builds/{{current_build_value}}/project/__init__.py"

    - name: Create manage.py file
      template: src="templates/manage.py" dest="{{ base_dir }}/builds/{{current_build_value}}/manage.py" group="{{ file_group }}" mode="755"

    - name: Create apache config directory
      file: group="{{ file_group }}" mode="2775" state="directory" path="{{ base_dir }}/builds/{{current_build_value}}/apache_config"

    - name: Create the apache config file
      template: src="{{ apache_config_template|default('templates/apache_config') }}" dest="{{ base_dir }}/builds/{{current_build_value}}/apache_config/apache-global" group="{{ file_group }}" mode="664"

    - name: Create a directory for wsgi
      file: group="{{ file_group }}" mode="2775" state="directory" path="{{ base_dir }}/builds/{{current_build_value}}/wsgi"

    - name: Copy the wsgi file
      template: src="templates/django.wsgi" group="{{ file_group }}" dest="{{ base_dir }}/builds/{{current_build_value}}/wsgi/django.wsgi" mode="664"

    # Moving these further down, so the rest of the basics will be in place - makes it so i can restart apache by hand and get current config - useful for log permissions issues

    - include: create_cache_table.yml
      when: cache_backends is defined

    - name: Collect statics
      django_manage: virtualenv="{{ base_dir }}/builds/{{current_build_value}}" app_path="{{ base_dir }}/builds/{{current_build_value}}" command="collectstatic"
      when: skip_collect_statics is not defined or not skip_collect_statics

    - name: Compress statics
      django_manage: virtualenv="{{ base_dir }}/builds/{{current_build_value}}" app_path="{{ base_dir }}/builds/{{current_build_value}}" command="compress"
      when: skip_compress_statics is not defined or not skip_compress_statics

    - name: Compress templates
      django_manage: virtualenv="{{ base_dir }}/builds/{{current_build_value}}" app_path="{{ base_dir }}/builds/{{current_build_value}}" command="preprocess_templates"
      when: (preprocess_templates is defined and preprocess_templates)

    - include: cdn-statics-deploy.yml
      when: aca_cdn_path | default(false)

    - include: syncdb.yml
      when: django_version is version('1.8', '<')
    - include: migrate.yml
      when: django_version is version('1.8', '>=')

    - name: Link live to the current build
      file: group="{{ file_group }}" src="{{ base_dir }}/builds/{{current_build_value}}" dest="{{ base_dir }}/live" state="link" force="yes"

    - name: Django management commands
      django_manage: virtualenv="{{ base_dir }}/builds/{{current_build_value}}" app_path="{{ base_dir }}/builds/{{current_build_value}}" command="{{ item }}" pythonpath="{{ base_dir }}/builds/{{current_build_value}}"
      with_items: "{{ django_management_commands }}"

    - name: Extra Django Command 1
      django_manage: virtualenv="{{ base_dir }}/builds/{{current_build_value}}" app_path="{{ base_dir }}/builds/{{current_build_value}}" command="{{ extra_django_command1|default('null_command') }}" pythonpath="{{ base_dir }}/builds/{{current_build_value}}"
      when: extra_django_command1|default(false)

    - name: Extra Django Command 2
      django_manage: virtualenv="{{ base_dir }}/builds/{{current_build_value}}" app_path="{{ base_dir }}/builds/{{current_build_value}}" command="{{ extra_django_command2|default('null_command') }}" pythonpath="{{ base_dir }}/builds/{{current_build_value}}"
      when: extra_django_command2|default(false)

    - name: Extra Django Async Command 1
      django_manage: virtualenv="{{ base_dir }}/builds/{{current_build_value}}" app_path="{{ base_dir }}/builds/{{current_build_value}}" command="{{ extra_async_django_command1|default('null_command') }}" pythonpath="{{ base_dir }}/builds/{{current_build_value}}"
      async: 1
      poll: 0
      when: extra_async_django_command1|default(false)

    - name: Extra Django Async Command 2
      django_manage: virtualenv="{{ base_dir }}/builds/{{current_build_value}}" app_path="{{ base_dir }}/builds/{{current_build_value}}" command="{{ extra_async_django_command2|default('null_command') }}" pythonpath="{{ base_dir }}/builds/{{current_build_value}}"
      async: 1
      poll: 0
      when: extra_async_django_command2|default(false)

    - name: Extra Django Async Command 3
      django_manage: virtualenv="{{ base_dir }}/builds/{{current_build_value}}" app_path="{{ base_dir }}/builds/{{current_build_value}}" command="{{ extra_async_django_command3|default('null_command') }}" pythonpath="{{ base_dir }}/builds/{{current_build_value}}"
      async: 1
      poll: 0
      when: extra_async_django_command3|default(false)

    - name: Reload apache
      command: /usr/local/apache/bin/ap-reload --restart
      when: reload_apache|default(true)

    - name: Fix permissions on the pip accel cache
      command: find {{ pip_accel_cache_dir }} -exec chmod g+w {} \;
      async: 500
      poll: 0

    - name: Fix permissions on the new deployed build
      command: find {{ base_dir }}/builds/{{current_build_value}} -exec chmod g+w {} \;
      async: 500
      poll: 0

    - name: Fix permissions for the new deployed static
      command: find {{ base_dir }}/static/{{current_build_value}} -exec chmod g+w {} \;
      async: 500
      poll: 0
      when: skip_compress_statics is not defined or not skip_compress_statics

    - name: Fix permissions for the compressed templates
      command: find {{ base_dir }}/compiled_templates -exec chmod g+w {} \;
      async: 500
      poll: 0
      when: (preprocess_templates is defined and preprocess_templates)

    - include: purge_all_types.yml
      when: purge_old_builds | default(true)
